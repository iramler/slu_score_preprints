---
title: "WNBA Team Data Worksheet"
format: html
---

All data came from the Weehoop package which can be viewed at https://CRAN.R-project.org/package=wehoop. 

Exercises

The `wnba_data` data set consists of these 9 variables: game_id, season, season_type, game_date, team_id, team_display_name, team_winner, opponent_team_id, team_home_away.

Eight teams make the playoffs each year in the WNBA. Our goal is to create a two-way table for looking at how often a team in the top 8 (in terms of wins) at the half-way point of the season makes the playoffs. (i.e., is a top 8 team at the end of the season) For simplicity, we will define a teams mid-season record as their win percentage on July 15 of each year. (This roughly corresponds to the mid point of the WNBA season.)

That is, we want to fill in this table:

#### Mid-season Top 8

|                 | TRUE | FALSE |
|-----------------|------|-------|
| Made Playoffs   |      |       |
| Missed Playoffs |      |       |


1.	Load in the `wnba_data` data set.  

```{r}
library(tidyverse)
library(here)
wnba_data <- read_csv("wnba_data.csv")
```

2.	What do you notice about the team IDs in this data set? Do they all belong to a valid team or are some not needed? (Hint: Might need to use the `distinct()` function). 

```{r}
wnba_data %>% 
  select(team_id, team_display_name) %>% 
  distinct() %>% 
  arrange(team_id)
```

_The IDs above 20 are not necessary because they don't represent teams playing in the regular season._

3.	Filter out the IDs we won’t be using. 

```{r}
wnba <- wnba_data %>% filter(team_id <= 20)
```

4.	Now, let's make sure each team ID is associated with the correct team name. Use a `select()` statement with both 	`team_id` and `team_name` and then use the `distinct()` function. Which team IDs are repeated? What might this mean?

```{r}
wnba %>%
  select(team_id, team_display_name) %>% 
  distinct() %>% 
  arrange(team_id)
```

_This means that the three names with ID 3 and the three names with ID 17 are the same teams who switched their name between seasons._

5.	For the IDs you found, rename the teams so that the same IDs all have the most recent team name. You can create a new variable called `team_name`. 

```{r}
wnba <- wnba %>% 
  mutate(team_name = 
           case_when(
             team_id == 3 ~ 'Dallas Wings',
             team_id == 17 ~ 'Las Vegas Aces',
             .default = team_display_name
             )
    ) 
```

6.	Now that our team names are correct, we can look at games played. Create a new data set called `reg_season` that only has data for regular season games (season_type == 2) and one called `playoffs` that only has data for playoff games (season_type == 3). 

```{r}
reg_season <- wnba %>% filter(season_type == 2)
playoffs <- wnba %>% filter(season_type == 3)
```

7.	To calculate win percentage at the mid-way point, we need to know how many games are played in a season. Use the `tally()` function to count the number of games played by each team within each season. What do you notice? 

```{r}
reg_season %>% 
  group_by(season, team_id) %>% 
  tally()
```

_The number of games played is inconsistent._

8.	Do some Google searching on how many games were played by WNBA teams during these seasons. You might find that the number of regular season games has fluctuated since 2020, but there is still a problem. Can you tell what it is? 

_Not every team has the same number of games recorded for each season._

9.	Let’s look into the 2008 season. There are 4 teams that played 33 games instead of 34. Find out who these teams are and Google their season statistics. Did they actually only play 33 games? Why is this a problem? 

```{r}
reg_season %>% 
  filter(season == 2008) %>% 
  group_by(team_id) %>% 
  tally()
```

_No. They all played 34 games. This is a problem because our analysis will not be accurate if there is missing data. _

10.	The data was scraped from the ESPN website. Go to <https://www.espn.com/wnba/team/schedule/_/name/atl/season/2008> and click on the first two scores recorded in the 'RESULT' Section. What is different about the pages these links take you to? How might this be causing the problem? 

_The second game of the season played on 05/23 does not have any team box score data, unlike the other games. This, along with other missing game data, likely caused issues when scraping the data from the webpage. _

11.	What are some ways we could solve this problem if we still wanted to create the table originally indicated? Choose a way and make a table with your new data. 

_This code just provides some starting points for answering this open-ended question. Instructors are welcome to use the code chunks to help guide students through the process, or leave it as a challenge for students._


-   We could look up the games and fill in the missing data by adding rows to the dataset.
-   We could remove the seasons with missing data from the data set.

```{r}
# Need to check which seasons are inconsistent with the number of games played between all teams
tallied <- reg_season %>% 
  group_by(season, team_id) %>% 
  tally()

tallied %>% group_by(n) 

# Helpful way to view results by season
table(tallied$n, tallied$season)
```

```{r}
# filter out seasons where number of games played is not consistent between all teams
# keep seasons 2007, 2009, 2010, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020
filtered <- reg_season %>% 
  filter(
    season %in% c(2007, 2009, 2010, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)
    )
```

```{r}
# total wins
team_wins <- wnba_data %>% 
  group_by(team_id, season) %>% 
  summarise(total_wins = sum(team_winner == TRUE, na.rm = TRUE), 
         total_losses = sum(team_winner == FALSE, na.rm = TRUE), 
         total_games = total_wins + total_losses) %>% 
  filter(total_games > 1) %>%
  arrange(team_id) 
team_wins
```

```{r}
# filter for mid season mark (July 15)
half_wins <- wnba_data %>%  
  filter((month(game_date) == 5 & day(game_date) >= 19) | 
           (month(game_date) == 6) |
           (month(game_date) == 7 & day(game_date) < 15)) %>% 
  group_by(team_id, season) %>% 
  summarize(half_wins = sum(team_winner == TRUE, na.rm = TRUE), 
            half_losses = sum(team_winner == FALSE, na.rm = TRUE),
            half_games = half_wins + half_losses, 
            ) %>% 
    filter(half_games > 1) %>%
  arrange(team_id) 
half_wins
```

```{r}
# Join datasets to create win data
wnba_win_data <- full_join(team_wins, half_wins, by = c("team_id", "season")) %>% 
 full_join(playoffs, by = c("team_id", "season")) %>% arrange(season)
wnba_win_data
```

```{r}
# where playoff value is NA, change this value to FALSE
wnba_win_data <- wnba_win_data %>% 
  mutate(playoff = ifelse(season_type == 3, TRUE, FALSE)) %>%
  mutate(playoff = ifelse(is.na(playoff), FALSE, playoff)) %>% 
  distinct()
wnba_win_data
```

```{r}
# get win percentages
wnba_win_data <- wnba_win_data %>% 
  mutate(total_win_percent = round(total_wins*100 / total_games, 2), 
                half_win_percent = round(half_wins*100 / half_games, 2))
wnba_win_data
```

```{r}
# Create ranking variable
# need to negate because by default it will give higher rank to lower percents
wnba_win_data <- wnba_win_data %>% 
  group_by(season) %>% 
  mutate(final_rank = as.integer(rank(-total_win_percent)), 
         half_rank = as.integer(rank(-half_win_percent)))
wnba_win_data
```

```{r}
# Create a variable that is a Yes if the team is in the top 8 rankings at the end of the season
wnba_win_data <- wnba_win_data %>% 
  mutate(final_top8 = ifelse(final_rank <= 8, "Made Playoffs", "Missed Playoffs"))
```

```{r}
# Do the same but for mid season
wnba_win_data <- wnba_win_data %>% 
  mutate(half_top8 = ifelse(half_rank <= 8, "TRUE", FALSE))
```

```{r}
# will want to clean up column names 
# if not manually recreating table

wnba_win_data %>%
  group_by(half_top8) %>%
  count(final_top8) %>% 
  pivot_wider(names_from = half_top8, values_from=n)
```

