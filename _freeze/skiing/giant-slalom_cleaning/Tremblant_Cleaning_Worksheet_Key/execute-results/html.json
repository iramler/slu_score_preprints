{
  "hash": "c78725f275cceb6f887c3c011a90f54b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cleaning Module Key\"\nformat: html\n---\n\n\n1. Load in necessary packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n2. Read in Tremblant_Data.csv\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nTremblant_df <- read_csv(\"Tremblant_Data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 30 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): NAME, NAT, TOTAL, RUN 1, RUN 2\ndbl (4): RANK, N, BIB, DIFF\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n3. Write a function that converts time to seconds\n\n::: {.cell}\n\n```{.r .cell-code}\nfix_time <- function(time){\n  n = length(time)\n  Diff = time[2:n]\n  t1 = time[1] |> ms() |> period_to_seconds()\n  Diff <- parse_number(Diff)\n  Diff <- t1 + Diff\n  return(c(t1, Diff))\n}\n## this function works for times over a minute\n```\n:::\n\n\n4. Fix the Total column using the function above\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df$TOTAL <- fix_time(Tremblant_df$TOTAL)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: 3 parsing failures.\nrow col expected actual\n 27  -- a number    DNF\n 28  -- a number    DNF\n 29  -- a number    DNF\n```\n\n\n:::\n:::\n\n\n5. 5.\tSeparate Run 1 into two columns for Run 1 time and Run 1 rank\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df <- Tremblant_df |>\n  separate(col = `RUN 1`, into = c(\"Run_1_Time\", \"Run_1_Rank\"),\n           sep = \"\\\\(\")\n```\n:::\n\n\n6. Do the same as above for Run 2\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df <- Tremblant_df |>\n  separate(col = `RUN 2`, into = c(\"Run_2_Time\", \"Run_2_Rank\"),\n           sep = \"\\\\(\")\n```\n:::\n\n\n7. 7.\tUse a function to make sure there are only numeric values in the Pr, Run 1 Rank, and Run 2 Rank columns\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df <- Tremblant_df |>\n  mutate(Run_1_Rank = parse_number(Run_1_Rank)) |>\n  mutate(Run_2_Rank = parse_number(Run_2_Rank))\n```\n:::\n\n\n8. 8.\tUse your function to fix time on Run 1 time and Run 2 time\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df$Run_1_Time <- fix_time(Tremblant_df$Run_1_Time)\nTremblant_df$Run_2_Time <- fix_time(Tremblant_df$Run_2_Time)\n```\n:::\n\n\n9. Rename variables logically. Answers will vary.\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df <- Tremblant_df |> rename(Final_Rank = RANK,\n                                  Run2_Order = N,\n                                  Run1_Order = BIB,\n                                  Total_Time = TOTAL,\n                                  Run1_Time = Run_1_Time,\n                                  Run1_Rank = Run_1_Rank,\n                                  Run2_Time = Run_2_Time,\n                                  Run2_Rank = Run_2_Rank)\n```\n:::\n\n\n10.\tOrder the variables logically. Answers will vary.\n\n::: {.cell}\n\n```{.r .cell-code}\nTremblant_df <- Tremblant_df |>\n  select(4, 5, 3, 8, 9, 2, 10, 11, 6, 1, 7)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}